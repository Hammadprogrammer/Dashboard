// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  bookings  Booking[] // relation to Booking
  createdAt DateTime  @default(now())
}

model Trip {
  id          Int       @id @default(autoincrement())
  title       String
  destination String
  price       Float
  startDate   DateTime
  endDate     DateTime
  bookings    Booking[] // relation to Booking
  createdAt   DateTime  @default(now())
}

model Booking {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  trip      Trip     @relation(fields: [tripId], references: [id])
  tripId    Int
  status    String   @default("pending")
  createdAt DateTime @default(now())
}



model HajjPackage {
  id        Int      @id @default(autoincrement())
  title     String
  price     Float
  imageUrl  String
  publicId  String
  isActive  Boolean  @default(true)
  category  String   @default("economic")
  createdAt DateTime @default(now())
}

model UmrahPackage {
  id        Int      @id @default(autoincrement())
  title     String
  price     Float
  imageUrl  String
  publicId  String
  isActive  Boolean  @default(true)
  category  String   @default("economic")
  createdAt DateTime @default(now())
}

model DomesticPackage {
  id        Int      @id @default(autoincrement())
  title     String
  price     Float
  imageUrl  String
  publicId  String
  isActive  Boolean  @default(true)
  category  String   @default("economic")
  createdAt DateTime @default(now())
}

model InternationalTour {
  id            Int            @id @default(autoincrement())
  title         String
  description   String
  isActive      Boolean        @default(true)
  backgroundUrl String?
  backgroundId  String?
  createdAt     DateTime       @default(now())
  sliderImages  SliderImage[]
}

model SliderImage {
  id       Int    @id @default(autoincrement())
  url      String
  publicId String
  tourId   Int
  tour     InternationalTour @relation(fields: [tourId], references: [id], onDelete: Cascade)
}

// prisma/schema.prisma

model WhyChooseUsItem {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  imageUrl    String
  publicId    String   @unique
  isActive    Boolean  @default(true) // âœ… This is the new field
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UmrahService {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  isActive    Boolean       @default(true)
  heroImage   String?       // We'll use this for a main, single image
  heroImageId String?
  createdAt   DateTime      @default(now())
  serviceImages ServiceImage[]
}

model ServiceImage {
  id        Int          @id @default(autoincrement())
  url       String
  publicId  String
  serviceId Int
  service   UmrahService @relation(fields: [serviceId], references: [id], onDelete: Cascade)
}

model CustomPilgrimage {
  id          Int           @id @default(autoincrement())
  title       String
  subtitle1   String?
  subtitle2   String?
  subtitle3   String?
  subtitle4   String?
  isActive    Boolean       @default(true)
  heroImage   String?       // The main background image
  heroImageId String?
  createdAt   DateTime      @default(now())
}



